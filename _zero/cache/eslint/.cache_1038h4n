[{"/var/www/i0x/data/www/zeronet.space/zeronet/pages/_app.tsx":"1","/var/www/i0x/data/www/zeronet.space/zeronet/pages/_document.tsx":"2","/var/www/i0x/data/www/zeronet.space/zeronet/pages/index.tsx":"3","/var/www/i0x/data/www/zeronet.space/zeronet/components/PageTitle.tsx":"4","/var/www/i0x/data/www/zeronet.space/zeronet/pages/post/[id].tsx":"5","/var/www/i0x/data/www/zeronet.space/zeronet/components/PageSubTitle.tsx":"6","/var/www/i0x/data/www/zeronet.space/zeronet/components/ZeroHead.tsx":"7","/var/www/i0x/data/www/zeronet.space/zeronet/pages/_offline.tsx":"8"},{"size":6401,"mtime":1648290378782,"results":"9","hashOfConfig":"10"},{"size":294,"mtime":1648139386312,"results":"11","hashOfConfig":"10"},{"size":2855,"mtime":1648291184960,"results":"12","hashOfConfig":"10"},{"size":253,"mtime":1647790914203,"results":"13","hashOfConfig":"10"},{"size":4112,"mtime":1648290282789,"results":"14","hashOfConfig":"10"},{"size":285,"mtime":1647790905951,"results":"15","hashOfConfig":"10"},{"size":1070,"mtime":1648145380134,"results":"16","hashOfConfig":"10"},{"size":148,"mtime":1648145490586,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"89jxky",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/var/www/i0x/data/www/zeronet.space/zeronet/pages/_app.tsx",[],[],"/var/www/i0x/data/www/zeronet.space/zeronet/pages/_document.tsx",[],[],"/var/www/i0x/data/www/zeronet.space/zeronet/pages/index.tsx",[],[],"/var/www/i0x/data/www/zeronet.space/zeronet/components/PageTitle.tsx",[],[],"/var/www/i0x/data/www/zeronet.space/zeronet/pages/post/[id].tsx",["43"],[],"import React, { useRef, useEffect, useState } from 'react';\n\nimport { \n  Text,\n  Box\n} from '@chakra-ui/react'\nimport { globby } from 'globby'\n\nimport md_hljs from 'highlight.js'\nimport md_meta from 'markdown-it-meta'\nimport md_anchor from 'markdown-it-anchor'\nimport md_toc from 'markdown-it-table-of-contents'\nimport md_attrs from 'markdown-it-attrs'\nimport md_table from 'markdown-it-multimd-table'\nimport md_wikilinks from 'markdown-it-wikilinks'\nimport { html5Media } from 'markdown-it-html5-media'\nimport md_abbr from 'markdown-it-abbr'\nimport md_comment from 'markdown-it-inline-comments'\nimport md_footnote from 'markdown-it-footnote'\nimport md_ghtasks from 'markdown-it-task-lists'\nimport md_kbd from 'markdown-it-kbd'\nimport md_emoji from 'markdown-it-emoji'\n\nimport twemoji from 'twemoji'\n\nconst md = require('markdown-it')({\n  html: true,\n  xhtmlOut: true,\n  breaks: true,\n  langPrefix: 'l-',\n  linkify: true,\n  typographer: true,\n  quotes: '“”‘’',\n  highlight: function (str, lang) {\n    if (lang && md_hljs.getLanguage(lang)) {\n      try {\n        return (\n          <pre className=\"hljs\"><code>\n            {md_hljs.highlight(str, { \n              language: lang, \n              ignoreIllegals: true \n            }).value}\n          </code></pre>\n        );\n      } catch (__) {}\n    }\n\n    return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n  }\n})\n  .use(md_meta)\n  .use(md_anchor)\n  .use(md_toc, {\n    includeLevel: [1, 2, 3],\n    listType: 'ol'\n  })\n  .use(md_attrs)\n  .use(md_table)\n  .use(md_wikilinks({}))\n  .use(html5Media)\n  .use(md_abbr, {\n    \"HTML\": \"Hyper Text Markup Language\",\n    \"W3C\": \"World Wide Web Consortium\"\n  })\n  .use(md_comment)\n  .use(md_footnote)\n  .use(md_ghtasks, {enabled: false})\n  .use(md_kbd)\n  .use(md_emoji);\nmd.linkify.set({ fuzzyEmail: false });\nmd.renderer.rules.emoji = function(token, idx) {\n  return twemoji.parse(token[idx].content);\n};\n\nimport fs from 'fs'\n\nimport PageTitle from '../../components/PageTitle'\nimport PageSubTitle from '../../components/PageSubTitle'\nimport ZeroHead from '../../components/ZeroHead'\n\nexport default function PostPage({ post }) {\n  const rawRef = useRef(null);\n  const [rawHTML,] = useState(post.data);\n\n  useEffect(() => {\n    if (rawRef.current) {\n      rawRef.current.innerHTML = rawHTML;\n    }\n  }, [rawRef.current, rawHTML]);\n\n  return (\n    <>\n      <ZeroHead\n        title={`zerønet — ${post.meta.title}`}\n        description={post.meta.subtitle}\n        type='article'\n        url={`https://zeronet.space/post/${post.meta.id}`}\n      />\n      <PageTitle title={post.meta.title} />\n      <PageSubTitle title={post.meta.subtitle || <b><i>Подзаголовок не указан...</i></b>} />\n      <Box position='relative' mb='60px' w='100%' p='2' fontSize='16px' ref={rawRef} />\n      <Box position='fixed' style={{\n        width: '100%',\n        bottom: '0'\n      }}>\n        <Box w='100%' bgColor='#898989' p='1' h='20px'>\n          <Text mt='-3px'><b><i>Автор статьи</i></b> {post.meta.author}</Text>\n        </Box>\n        <Box w='100%' bgColor='#898989' p='1' h='20px'>\n          <Text mt='-3px'><b><i>Статья опубликована</i></b> {post.meta.createdAt}</Text>\n        </Box>\n        <Box w='100%' bgColor='#898989' p='1' h='20px'>\n          <Text mt='-3px'><b><i>Последнее изменение</i></b> {post.meta.modifiedAt}</Text>\n        </Box>\n      </Box>\n    </>\n  )\n}\n\nexport async function getServerSideProps(context) {\n  let { id } = context.query;\n\n  let posts = (await globby(\"./articles/**/*.md\")).map(post => {\n    let document = md.render(fs.readFileSync(post, \"utf-8\").toString());\n    if(md.meta.id.toString() === id) {\n      let stat = fs.statSync(post);\n      return { \n        meta: {\n          ...md.meta, \n          createdAt: stat.ctime.toLocaleString(\"ru-RU\"), \n          modifiedAt: stat.mtime.toLocaleString(\"ru-RU\"), \n        },\n        data: document,\n      };\n    };\n  });\n\n  let post = posts.filter(post => post !== undefined && post.meta.id.toString() === id)[0];\n\n  return { props: { post: post } };\n}\n","/var/www/i0x/data/www/zeronet.space/zeronet/components/PageSubTitle.tsx",[],[],"/var/www/i0x/data/www/zeronet.space/zeronet/components/ZeroHead.tsx",[],[],"/var/www/i0x/data/www/zeronet.space/zeronet/pages/_offline.tsx",[],[],{"ruleId":"44","severity":1,"message":"45","line":89,"column":6,"nodeType":"46","endLine":89,"endColumn":31,"suggestions":"47"},"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'rawRef.current'. Either exclude it or remove the dependency array. Mutable values like 'rawRef.current' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["48"],{"desc":"49","fix":"50"},"Update the dependencies array to be: [rawHTML]",{"range":"51","text":"52"},[2321,2346],"[rawHTML]"]